; Validated by https://author-tools.ietf.org/abnf

schema = struct oneof multimap

; struct rules

struct = "struct" struct-name *struct-modifier "{" struct-body "}"

struct-name = identifier

identifier = ALPHA *(ALPHA / DIGIT)

struct-modifier = dict-modifier / "main"

dict-modifier = "(" identifier ")"

struct-body = 1*struct-field

struct-field = identifier field-type [struct-field-modifier]

struct-field-modifier = dict-modifier / optional-modifier

optional-modifier = "optional"

; oneof rules

oneof = "oneof" oneof-name "{" oneof-body "}"

oneof-name = identifier

oneof-body = 1*oneof-field

oneof-field = identifier field-type [oneof-field-modifier]

oneof-field-modifier = dict-modifier

; multimap rules

multimap = "multimap" multimap-name "{" multimap-body "}"

multimap-name = identifier

multimap-body = multimap-key multimap-value

multimap-key = "Key" field-type [multimap-field-modifier]

multimap-value = "Value" field-type [multimap-field-modifier]

multimap-field-modifier = dict-modifier

; type definition

field-type = [array-specifier] builtin-type / userdefined-type

array-specifier = "[]"

builtin-type = "bool" / "int64" / "float64" / "string" / "bytes"

userdefined-type = identifier

; core rules

ALPHA =  %x41-5A / %x61-7A   ; A-Z / a-z

DIGIT =  %x30-39    ; 0-9
