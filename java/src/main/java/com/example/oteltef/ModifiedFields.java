// Code generated by stefc. DO NOT EDIT.
// com.example.oteltef.ModifiedFields Java class generated from template
package com.example.oteltef;

/**
 * ModifiedFields tracks the state of modified fields in the containing struct.
 * mask has a 1 bit set for all modified fields.
 */
public class ModifiedFields {
    // mask is a bitfield that tracks the state of the modified fields of the containing struct.
    // mask has a 1 bit set for all modified fields.
    public long mask;

    // When any field on this struct is modified, we also mark this struct as modified
    // in its containing parent struct. To be able to do that we keep a reference to parent
    // and the bit to set.

    // parent's ModifiedFields
    public ModifiedFields parent;

    // the bit that corresponds to this struct's field in the parent struct
    public long parentBit;

    void init(ModifiedFields parentModifiedFields, long parentModifiedBit) {
        parent = parentModifiedFields;
        parentBit = parentModifiedBit;
    }

    public void markModified(long fieldBit) {
        if ((this.mask & fieldBit) != fieldBit) {
            this.markModifiedSlow(fieldBit);
        }
    }

    public boolean isModified(long fieldBit) {
        return (this.mask & fieldBit) != 0;
    }

    public void markModifiedSlow(long fieldBit) {
        this.mask |= fieldBit;
        ModifiedFields child = this;
        ModifiedFields parent = this.parent;
        while (parent != null) {
            if ((parent.mask & child.parentBit) == 0) {
                parent.mask |= child.parentBit;
                child = parent;
                parent = parent.parent;
            } else {
                break;
            }
        }
    }

    // Mark the parent struct as modified without modifying any field in this struct.
    public void markParentModified() {
        markModifiedSlow(0);
    }

    public void markUnmodifiedAll() {
        this.mask = 0;
    }
}
