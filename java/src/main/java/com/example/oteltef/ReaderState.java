// Code generated by stefgen. DO NOT EDIT.
package com.example.oteltef;

import net.stef.codecs.*;
import net.stef.schema.*;

public class ReaderState {
    // overrideSchema is set if decoding should perform a translation from specified
    // schema. OverrideSchema must be compatible with decoders' schema.
    private WireSchema overrideSchema;

    // Dictionaries
    final StringDecoderDict AnyValueString = new StringDecoderDict();
    final StringDecoderDict AttributeKey = new StringDecoderDict();
    final MetricDecoderDict Metric = new MetricDecoderDict();
    final StringDecoderDict MetricDescription = new StringDecoderDict();
    final StringDecoderDict MetricName = new StringDecoderDict();
    final StringDecoderDict MetricUnit = new StringDecoderDict();
    final ResourceDecoderDict Resource = new ResourceDecoderDict();
    final StringDecoderDict SchemaURL = new StringDecoderDict();
    final ScopeDecoderDict Scope = new ScopeDecoderDict();
    final StringDecoderDict ScopeName = new StringDecoderDict();
    final StringDecoderDict ScopeVersion = new StringDecoderDict();
    final StringDecoderDict SpanEventName = new StringDecoderDict();
    final StringDecoderDict SpanName = new StringDecoderDict();
    

    // Decoders
    AnyValueDecoder AnyValueDecoder;
    AnyValueArrayDecoder AnyValueArrayDecoder;
    AttributesDecoder AttributesDecoder;
    EnvelopeDecoder EnvelopeDecoder;
    EnvelopeAttributesDecoder EnvelopeAttributesDecoder;
    EventDecoder EventDecoder;
    EventArrayDecoder EventArrayDecoder;
    ExemplarDecoder ExemplarDecoder;
    ExemplarArrayDecoder ExemplarArrayDecoder;
    ExemplarValueDecoder ExemplarValueDecoder;
    ExpHistogramBucketsDecoder ExpHistogramBucketsDecoder;
    ExpHistogramValueDecoder ExpHistogramValueDecoder;
    Float64ArrayDecoder Float64ArrayDecoder;
    HistogramValueDecoder HistogramValueDecoder;
    Int64ArrayDecoder Int64ArrayDecoder;
    KeyValueListDecoder KeyValueListDecoder;
    LinkDecoder LinkDecoder;
    LinkArrayDecoder LinkArrayDecoder;
    MetricDecoder MetricDecoder;
    MetricsDecoder MetricsDecoder;
    PointDecoder PointDecoder;
    PointValueDecoder PointValueDecoder;
    QuantileValueDecoder QuantileValueDecoder;
    QuantileValueArrayDecoder QuantileValueArrayDecoder;
    ResourceDecoder ResourceDecoder;
    ScopeDecoder ScopeDecoder;
    SpanDecoder SpanDecoder;
    SpanStatusDecoder SpanStatusDecoder;
    SpansDecoder SpansDecoder;
    SummaryValueDecoder SummaryValueDecoder;
    Uint64ArrayDecoder Uint64ArrayDecoder;
    

    public void init(WireSchema overrideSchema) {
        this.overrideSchema = overrideSchema;
        this.AnyValueString.init();
        this.AttributeKey.init();
        this.Metric.init();
        this.MetricDescription.init();
        this.MetricName.init();
        this.MetricUnit.init();
        this.Resource.init();
        this.SchemaURL.init();
        this.Scope.init();
        this.ScopeName.init();
        this.ScopeVersion.init();
        this.SpanEventName.init();
        this.SpanName.init();
        }

    // resetDicts resets all dictionaries to initial state. Used when a frame is
    // started with RestartDictionaries flag.
    public void resetDicts() {
        this.AnyValueString.reset();
        this.AttributeKey.reset();
        this.Metric.reset();
        this.MetricDescription.reset();
        this.MetricName.reset();
        this.MetricUnit.reset();
        this.Resource.reset();
        this.SchemaURL.reset();
        this.Scope.reset();
        this.ScopeName.reset();
        this.ScopeVersion.reset();
        this.SpanEventName.reset();
        this.SpanName.reset();
        }

    // Getter and Setter for OverrideSchema
    public WireSchema getOverrideSchema() {
        return overrideSchema;
    }

    public void setOverrideSchema(WireSchema overrideSchema) {
        this.overrideSchema = overrideSchema;
    }
}
