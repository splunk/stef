// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: destination.proto
// Protobuf Java Version: 4.29.3

package net.stef.grpc.service.destination;

/**
 * Protobuf type {@code STEFDestinationCapabilities}
 */
public final class STEFDestinationCapabilities extends
    com.google.protobuf.GeneratedMessage implements
    // @@protoc_insertion_point(message_implements:STEFDestinationCapabilities)
    STEFDestinationCapabilitiesOrBuilder {
private static final long serialVersionUID = 0L;
  static {
    com.google.protobuf.RuntimeVersion.validateProtobufGencodeVersion(
      com.google.protobuf.RuntimeVersion.RuntimeDomain.PUBLIC,
      /* major= */ 4,
      /* minor= */ 29,
      /* patch= */ 3,
      /* suffix= */ "",
      STEFDestinationCapabilities.class.getName());
  }
  // Use STEFDestinationCapabilities.newBuilder() to construct.
  private STEFDestinationCapabilities(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
    super(builder);
  }
  private STEFDestinationCapabilities() {
    schema_ = com.google.protobuf.ByteString.EMPTY;
  }

  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return net.stef.grpc.service.destination.Destination.internal_static_STEFDestinationCapabilities_descriptor;
  }

  @java.lang.Override
  protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return net.stef.grpc.service.destination.Destination.internal_static_STEFDestinationCapabilities_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            net.stef.grpc.service.destination.STEFDestinationCapabilities.class, net.stef.grpc.service.destination.STEFDestinationCapabilities.Builder.class);
  }

  private int bitField0_;
  public static final int DICTIONARY_LIMITS_FIELD_NUMBER = 1;
  private net.stef.grpc.service.destination.STEFDictionaryLimits dictionaryLimits_;
  /**
   * <pre>
   * dictionary_limits of the destination. The client MUST honor the limits.
   * </pre>
   *
   * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
   * @return Whether the dictionaryLimits field is set.
   */
  @java.lang.Override
  public boolean hasDictionaryLimits() {
    return ((bitField0_ & 0x00000001) != 0);
  }
  /**
   * <pre>
   * dictionary_limits of the destination. The client MUST honor the limits.
   * </pre>
   *
   * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
   * @return The dictionaryLimits.
   */
  @java.lang.Override
  public net.stef.grpc.service.destination.STEFDictionaryLimits getDictionaryLimits() {
    return dictionaryLimits_ == null ? net.stef.grpc.service.destination.STEFDictionaryLimits.getDefaultInstance() : dictionaryLimits_;
  }
  /**
   * <pre>
   * dictionary_limits of the destination. The client MUST honor the limits.
   * </pre>
   *
   * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
   */
  @java.lang.Override
  public net.stef.grpc.service.destination.STEFDictionaryLimitsOrBuilder getDictionaryLimitsOrBuilder() {
    return dictionaryLimits_ == null ? net.stef.grpc.service.destination.STEFDictionaryLimits.getDefaultInstance() : dictionaryLimits_;
  }

  public static final int SCHEMA_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString schema_ = com.google.protobuf.ByteString.EMPTY;
  /**
   * <pre>
   * schema is the STEF schema supported by the destination. The schema description
   * is in binary format defined by STEF spec.
   * Upon receiving this schema description from the destination the client has 4
   * possibilities:
   * 1. The schema matches client's schema exactly. The client can send its STEF data as is.
   * 2. The schema is a superset of client's schema. The client can send its STEF
   * data as is and MUST specify client's schema in the STEF header. The destination
   * will be able to read STEF data because STEF Readers support reading data encoded
   * in schema that is subset of their supported schema.
   * 3. The schema is a subset of client's schema. The client MUST downgrade its encoders
   * to output STEF data in the specified schema.
   * 4. The schema is incompatible with client's schema (neither an exact match, nor a
   * subset or superset). The client and the destination are incompatible and cannot
   * communicate. The client MUST close the stream, further communication is not possible.
   * </pre>
   *
   * <code>bytes schema = 2;</code>
   * @return The schema.
   */
  @java.lang.Override
  public com.google.protobuf.ByteString getSchema() {
    return schema_;
  }

  private byte memoizedIsInitialized = -1;
  @java.lang.Override
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  @java.lang.Override
  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (((bitField0_ & 0x00000001) != 0)) {
      output.writeMessage(1, getDictionaryLimits());
    }
    if (!schema_.isEmpty()) {
      output.writeBytes(2, schema_);
    }
    getUnknownFields().writeTo(output);
  }

  @java.lang.Override
  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (((bitField0_ & 0x00000001) != 0)) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getDictionaryLimits());
    }
    if (!schema_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, schema_);
    }
    size += getUnknownFields().getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof net.stef.grpc.service.destination.STEFDestinationCapabilities)) {
      return super.equals(obj);
    }
    net.stef.grpc.service.destination.STEFDestinationCapabilities other = (net.stef.grpc.service.destination.STEFDestinationCapabilities) obj;

    if (hasDictionaryLimits() != other.hasDictionaryLimits()) return false;
    if (hasDictionaryLimits()) {
      if (!getDictionaryLimits()
          .equals(other.getDictionaryLimits())) return false;
    }
    if (!getSchema()
        .equals(other.getSchema())) return false;
    if (!getUnknownFields().equals(other.getUnknownFields())) return false;
    return true;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasDictionaryLimits()) {
      hash = (37 * hash) + DICTIONARY_LIMITS_FIELD_NUMBER;
      hash = (53 * hash) + getDictionaryLimits().hashCode();
    }
    hash = (37 * hash) + SCHEMA_FIELD_NUMBER;
    hash = (53 * hash) + getSchema().hashCode();
    hash = (29 * hash) + getUnknownFields().hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static net.stef.grpc.service.destination.STEFDestinationCapabilities parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.stef.grpc.service.destination.STEFDestinationCapabilities parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.stef.grpc.service.destination.STEFDestinationCapabilities parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.stef.grpc.service.destination.STEFDestinationCapabilities parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.stef.grpc.service.destination.STEFDestinationCapabilities parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static net.stef.grpc.service.destination.STEFDestinationCapabilities parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static net.stef.grpc.service.destination.STEFDestinationCapabilities parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static net.stef.grpc.service.destination.STEFDestinationCapabilities parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public static net.stef.grpc.service.destination.STEFDestinationCapabilities parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input);
  }

  public static net.stef.grpc.service.destination.STEFDestinationCapabilities parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static net.stef.grpc.service.destination.STEFDestinationCapabilities parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input);
  }
  public static net.stef.grpc.service.destination.STEFDestinationCapabilities parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessage
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  @java.lang.Override
  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(net.stef.grpc.service.destination.STEFDestinationCapabilities prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  @java.lang.Override
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessage.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code STEFDestinationCapabilities}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessage.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:STEFDestinationCapabilities)
      net.stef.grpc.service.destination.STEFDestinationCapabilitiesOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return net.stef.grpc.service.destination.Destination.internal_static_STEFDestinationCapabilities_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return net.stef.grpc.service.destination.Destination.internal_static_STEFDestinationCapabilities_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              net.stef.grpc.service.destination.STEFDestinationCapabilities.class, net.stef.grpc.service.destination.STEFDestinationCapabilities.Builder.class);
    }

    // Construct using net.stef.grpc.service.destination.STEFDestinationCapabilities.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessage
              .alwaysUseFieldBuilders) {
        getDictionaryLimitsFieldBuilder();
      }
    }
    @java.lang.Override
    public Builder clear() {
      super.clear();
      bitField0_ = 0;
      dictionaryLimits_ = null;
      if (dictionaryLimitsBuilder_ != null) {
        dictionaryLimitsBuilder_.dispose();
        dictionaryLimitsBuilder_ = null;
      }
      schema_ = com.google.protobuf.ByteString.EMPTY;
      return this;
    }

    @java.lang.Override
    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return net.stef.grpc.service.destination.Destination.internal_static_STEFDestinationCapabilities_descriptor;
    }

    @java.lang.Override
    public net.stef.grpc.service.destination.STEFDestinationCapabilities getDefaultInstanceForType() {
      return net.stef.grpc.service.destination.STEFDestinationCapabilities.getDefaultInstance();
    }

    @java.lang.Override
    public net.stef.grpc.service.destination.STEFDestinationCapabilities build() {
      net.stef.grpc.service.destination.STEFDestinationCapabilities result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    @java.lang.Override
    public net.stef.grpc.service.destination.STEFDestinationCapabilities buildPartial() {
      net.stef.grpc.service.destination.STEFDestinationCapabilities result = new net.stef.grpc.service.destination.STEFDestinationCapabilities(this);
      if (bitField0_ != 0) { buildPartial0(result); }
      onBuilt();
      return result;
    }

    private void buildPartial0(net.stef.grpc.service.destination.STEFDestinationCapabilities result) {
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((from_bitField0_ & 0x00000001) != 0)) {
        result.dictionaryLimits_ = dictionaryLimitsBuilder_ == null
            ? dictionaryLimits_
            : dictionaryLimitsBuilder_.build();
        to_bitField0_ |= 0x00000001;
      }
      if (((from_bitField0_ & 0x00000002) != 0)) {
        result.schema_ = schema_;
      }
      result.bitField0_ |= to_bitField0_;
    }

    @java.lang.Override
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof net.stef.grpc.service.destination.STEFDestinationCapabilities) {
        return mergeFrom((net.stef.grpc.service.destination.STEFDestinationCapabilities)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(net.stef.grpc.service.destination.STEFDestinationCapabilities other) {
      if (other == net.stef.grpc.service.destination.STEFDestinationCapabilities.getDefaultInstance()) return this;
      if (other.hasDictionaryLimits()) {
        mergeDictionaryLimits(other.getDictionaryLimits());
      }
      if (other.getSchema() != com.google.protobuf.ByteString.EMPTY) {
        setSchema(other.getSchema());
      }
      this.mergeUnknownFields(other.getUnknownFields());
      onChanged();
      return this;
    }

    @java.lang.Override
    public final boolean isInitialized() {
      return true;
    }

    @java.lang.Override
    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              input.readMessage(
                  getDictionaryLimitsFieldBuilder().getBuilder(),
                  extensionRegistry);
              bitField0_ |= 0x00000001;
              break;
            } // case 10
            case 18: {
              schema_ = input.readBytes();
              bitField0_ |= 0x00000002;
              break;
            } // case 18
            default: {
              if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                done = true; // was an endgroup tag
              }
              break;
            } // default:
          } // switch (tag)
        } // while (!done)
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.unwrapIOException();
      } finally {
        onChanged();
      } // finally
      return this;
    }
    private int bitField0_;

    private net.stef.grpc.service.destination.STEFDictionaryLimits dictionaryLimits_;
    private com.google.protobuf.SingleFieldBuilder<
        net.stef.grpc.service.destination.STEFDictionaryLimits, net.stef.grpc.service.destination.STEFDictionaryLimits.Builder, net.stef.grpc.service.destination.STEFDictionaryLimitsOrBuilder> dictionaryLimitsBuilder_;
    /**
     * <pre>
     * dictionary_limits of the destination. The client MUST honor the limits.
     * </pre>
     *
     * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
     * @return Whether the dictionaryLimits field is set.
     */
    public boolean hasDictionaryLimits() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <pre>
     * dictionary_limits of the destination. The client MUST honor the limits.
     * </pre>
     *
     * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
     * @return The dictionaryLimits.
     */
    public net.stef.grpc.service.destination.STEFDictionaryLimits getDictionaryLimits() {
      if (dictionaryLimitsBuilder_ == null) {
        return dictionaryLimits_ == null ? net.stef.grpc.service.destination.STEFDictionaryLimits.getDefaultInstance() : dictionaryLimits_;
      } else {
        return dictionaryLimitsBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * dictionary_limits of the destination. The client MUST honor the limits.
     * </pre>
     *
     * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
     */
    public Builder setDictionaryLimits(net.stef.grpc.service.destination.STEFDictionaryLimits value) {
      if (dictionaryLimitsBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        dictionaryLimits_ = value;
      } else {
        dictionaryLimitsBuilder_.setMessage(value);
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * dictionary_limits of the destination. The client MUST honor the limits.
     * </pre>
     *
     * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
     */
    public Builder setDictionaryLimits(
        net.stef.grpc.service.destination.STEFDictionaryLimits.Builder builderForValue) {
      if (dictionaryLimitsBuilder_ == null) {
        dictionaryLimits_ = builderForValue.build();
      } else {
        dictionaryLimitsBuilder_.setMessage(builderForValue.build());
      }
      bitField0_ |= 0x00000001;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * dictionary_limits of the destination. The client MUST honor the limits.
     * </pre>
     *
     * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
     */
    public Builder mergeDictionaryLimits(net.stef.grpc.service.destination.STEFDictionaryLimits value) {
      if (dictionaryLimitsBuilder_ == null) {
        if (((bitField0_ & 0x00000001) != 0) &&
          dictionaryLimits_ != null &&
          dictionaryLimits_ != net.stef.grpc.service.destination.STEFDictionaryLimits.getDefaultInstance()) {
          getDictionaryLimitsBuilder().mergeFrom(value);
        } else {
          dictionaryLimits_ = value;
        }
      } else {
        dictionaryLimitsBuilder_.mergeFrom(value);
      }
      if (dictionaryLimits_ != null) {
        bitField0_ |= 0x00000001;
        onChanged();
      }
      return this;
    }
    /**
     * <pre>
     * dictionary_limits of the destination. The client MUST honor the limits.
     * </pre>
     *
     * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
     */
    public Builder clearDictionaryLimits() {
      bitField0_ = (bitField0_ & ~0x00000001);
      dictionaryLimits_ = null;
      if (dictionaryLimitsBuilder_ != null) {
        dictionaryLimitsBuilder_.dispose();
        dictionaryLimitsBuilder_ = null;
      }
      onChanged();
      return this;
    }
    /**
     * <pre>
     * dictionary_limits of the destination. The client MUST honor the limits.
     * </pre>
     *
     * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
     */
    public net.stef.grpc.service.destination.STEFDictionaryLimits.Builder getDictionaryLimitsBuilder() {
      bitField0_ |= 0x00000001;
      onChanged();
      return getDictionaryLimitsFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * dictionary_limits of the destination. The client MUST honor the limits.
     * </pre>
     *
     * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
     */
    public net.stef.grpc.service.destination.STEFDictionaryLimitsOrBuilder getDictionaryLimitsOrBuilder() {
      if (dictionaryLimitsBuilder_ != null) {
        return dictionaryLimitsBuilder_.getMessageOrBuilder();
      } else {
        return dictionaryLimits_ == null ?
            net.stef.grpc.service.destination.STEFDictionaryLimits.getDefaultInstance() : dictionaryLimits_;
      }
    }
    /**
     * <pre>
     * dictionary_limits of the destination. The client MUST honor the limits.
     * </pre>
     *
     * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilder<
        net.stef.grpc.service.destination.STEFDictionaryLimits, net.stef.grpc.service.destination.STEFDictionaryLimits.Builder, net.stef.grpc.service.destination.STEFDictionaryLimitsOrBuilder> 
        getDictionaryLimitsFieldBuilder() {
      if (dictionaryLimitsBuilder_ == null) {
        dictionaryLimitsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
            net.stef.grpc.service.destination.STEFDictionaryLimits, net.stef.grpc.service.destination.STEFDictionaryLimits.Builder, net.stef.grpc.service.destination.STEFDictionaryLimitsOrBuilder>(
                getDictionaryLimits(),
                getParentForChildren(),
                isClean());
        dictionaryLimits_ = null;
      }
      return dictionaryLimitsBuilder_;
    }

    private com.google.protobuf.ByteString schema_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * schema is the STEF schema supported by the destination. The schema description
     * is in binary format defined by STEF spec.
     * Upon receiving this schema description from the destination the client has 4
     * possibilities:
     * 1. The schema matches client's schema exactly. The client can send its STEF data as is.
     * 2. The schema is a superset of client's schema. The client can send its STEF
     * data as is and MUST specify client's schema in the STEF header. The destination
     * will be able to read STEF data because STEF Readers support reading data encoded
     * in schema that is subset of their supported schema.
     * 3. The schema is a subset of client's schema. The client MUST downgrade its encoders
     * to output STEF data in the specified schema.
     * 4. The schema is incompatible with client's schema (neither an exact match, nor a
     * subset or superset). The client and the destination are incompatible and cannot
     * communicate. The client MUST close the stream, further communication is not possible.
     * </pre>
     *
     * <code>bytes schema = 2;</code>
     * @return The schema.
     */
    @java.lang.Override
    public com.google.protobuf.ByteString getSchema() {
      return schema_;
    }
    /**
     * <pre>
     * schema is the STEF schema supported by the destination. The schema description
     * is in binary format defined by STEF spec.
     * Upon receiving this schema description from the destination the client has 4
     * possibilities:
     * 1. The schema matches client's schema exactly. The client can send its STEF data as is.
     * 2. The schema is a superset of client's schema. The client can send its STEF
     * data as is and MUST specify client's schema in the STEF header. The destination
     * will be able to read STEF data because STEF Readers support reading data encoded
     * in schema that is subset of their supported schema.
     * 3. The schema is a subset of client's schema. The client MUST downgrade its encoders
     * to output STEF data in the specified schema.
     * 4. The schema is incompatible with client's schema (neither an exact match, nor a
     * subset or superset). The client and the destination are incompatible and cannot
     * communicate. The client MUST close the stream, further communication is not possible.
     * </pre>
     *
     * <code>bytes schema = 2;</code>
     * @param value The schema to set.
     * @return This builder for chaining.
     */
    public Builder setSchema(com.google.protobuf.ByteString value) {
      if (value == null) { throw new NullPointerException(); }
      schema_ = value;
      bitField0_ |= 0x00000002;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * schema is the STEF schema supported by the destination. The schema description
     * is in binary format defined by STEF spec.
     * Upon receiving this schema description from the destination the client has 4
     * possibilities:
     * 1. The schema matches client's schema exactly. The client can send its STEF data as is.
     * 2. The schema is a superset of client's schema. The client can send its STEF
     * data as is and MUST specify client's schema in the STEF header. The destination
     * will be able to read STEF data because STEF Readers support reading data encoded
     * in schema that is subset of their supported schema.
     * 3. The schema is a subset of client's schema. The client MUST downgrade its encoders
     * to output STEF data in the specified schema.
     * 4. The schema is incompatible with client's schema (neither an exact match, nor a
     * subset or superset). The client and the destination are incompatible and cannot
     * communicate. The client MUST close the stream, further communication is not possible.
     * </pre>
     *
     * <code>bytes schema = 2;</code>
     * @return This builder for chaining.
     */
    public Builder clearSchema() {
      bitField0_ = (bitField0_ & ~0x00000002);
      schema_ = getDefaultInstance().getSchema();
      onChanged();
      return this;
    }

    // @@protoc_insertion_point(builder_scope:STEFDestinationCapabilities)
  }

  // @@protoc_insertion_point(class_scope:STEFDestinationCapabilities)
  private static final net.stef.grpc.service.destination.STEFDestinationCapabilities DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new net.stef.grpc.service.destination.STEFDestinationCapabilities();
  }

  public static net.stef.grpc.service.destination.STEFDestinationCapabilities getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<STEFDestinationCapabilities>
      PARSER = new com.google.protobuf.AbstractParser<STEFDestinationCapabilities>() {
    @java.lang.Override
    public STEFDestinationCapabilities parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      Builder builder = newBuilder();
      try {
        builder.mergeFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(builder.buildPartial());
      } catch (com.google.protobuf.UninitializedMessageException e) {
        throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(e)
            .setUnfinishedMessage(builder.buildPartial());
      }
      return builder.buildPartial();
    }
  };

  public static com.google.protobuf.Parser<STEFDestinationCapabilities> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<STEFDestinationCapabilities> getParserForType() {
    return PARSER;
  }

  @java.lang.Override
  public net.stef.grpc.service.destination.STEFDestinationCapabilities getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

