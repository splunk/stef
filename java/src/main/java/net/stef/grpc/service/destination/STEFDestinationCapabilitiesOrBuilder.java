// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: destination.proto
// Protobuf Java Version: 4.29.3

package net.stef.grpc.service.destination;

public interface STEFDestinationCapabilitiesOrBuilder extends
    // @@protoc_insertion_point(interface_extends:STEFDestinationCapabilities)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * dictionary_limits of the destination. The client MUST honor the limits.
   * </pre>
   *
   * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
   * @return Whether the dictionaryLimits field is set.
   */
  boolean hasDictionaryLimits();
  /**
   * <pre>
   * dictionary_limits of the destination. The client MUST honor the limits.
   * </pre>
   *
   * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
   * @return The dictionaryLimits.
   */
  net.stef.grpc.service.destination.STEFDictionaryLimits getDictionaryLimits();
  /**
   * <pre>
   * dictionary_limits of the destination. The client MUST honor the limits.
   * </pre>
   *
   * <code>.STEFDictionaryLimits dictionary_limits = 1;</code>
   */
  net.stef.grpc.service.destination.STEFDictionaryLimitsOrBuilder getDictionaryLimitsOrBuilder();

  /**
   * <pre>
   * schema is the STEF schema supported by the destination. The schema description
   * is in binary format defined by STEF spec.
   * Upon receiving this schema description from the destination the client has 4
   * possibilities:
   * 1. The schema matches client's schema exactly. The client can send its STEF data as is.
   * 2. The schema is a superset of client's schema. The client can send its STEF
   * data as is and MUST specify client's schema in the STEF header. The destination
   * will be able to read STEF data because STEF Readers support reading data encoded
   * in schema that is subset of their supported schema.
   * 3. The schema is a subset of client's schema. The client MUST downgrade its encoders
   * to output STEF data in the specified schema.
   * 4. The schema is incompatible with client's schema (neither an exact match, nor a
   * subset or superset). The client and the destination are incompatible and cannot
   * communicate. The client MUST close the stream, further communication is not possible.
   * </pre>
   *
   * <code>bytes schema = 2;</code>
   * @return The schema.
   */
  com.google.protobuf.ByteString getSchema();
}
