// Code generated by stefgen. DO NOT EDIT.
package profile

import (
	"github.com/splunk/stef/go/pkg"
	"github.com/splunk/stef/go/pkg/encoders"
	"github.com/splunk/stef/go/pkg/schema"
)

var _ = (*encoders.StringEncoder)(nil)

type WriterState struct {
	limiter pkg.SizeLimiter

	// OverrideSchema is set if encoding should perform a translation into the target
	// schema. The specified schema must be compatible with encoders' schema.
	OverrideSchema *schema.WireSchema

	// Dictionaries
	BuildID         encoders.StringEncoderDict
	Comment         encoders.StringEncoderDict
	Filename        encoders.StringEncoderDict
	Function        FunctionEncoderDict
	FunctionName    encoders.StringEncoderDict
	LabelKey        encoders.StringEncoderDict
	LabelValue      encoders.StringEncoderDict
	Location        LocationEncoderDict
	Mapping         MappingEncoderDict
	NumValueUnit    encoders.StringEncoderDict
	SampleValueType SampleValueTypeEncoderDict
	SystemName      encoders.StringEncoderDict

	// Encoders that are being Init-ed, to detect recursion.
	FunctionEncoder         *FunctionEncoder
	LabelValueEncoder       *LabelValueEncoder
	LabelsEncoder           *LabelsEncoder
	LineEncoder             *LineEncoder
	LineArrayEncoder        *LineArrayEncoder
	LocationEncoder         *LocationEncoder
	LocationArrayEncoder    *LocationArrayEncoder
	MappingEncoder          *MappingEncoder
	NumValueEncoder         *NumValueEncoder
	ProfileMetadataEncoder  *ProfileMetadataEncoder
	SampleEncoder           *SampleEncoder
	SampleValueEncoder      *SampleValueEncoder
	SampleValueArrayEncoder *SampleValueArrayEncoder
	SampleValueTypeEncoder  *SampleValueTypeEncoder
	StringArrayEncoder      *StringArrayEncoder
}

func (d *WriterState) Init(opts *pkg.WriterOptions) {
	d.limiter.Init(opts)
	d.OverrideSchema = opts.Schema

	// Init dictionaries
	d.BuildID.Init(&d.limiter)
	d.Comment.Init(&d.limiter)
	d.Filename.Init(&d.limiter)
	d.Function.Init(&d.limiter)
	d.FunctionName.Init(&d.limiter)
	d.LabelKey.Init(&d.limiter)
	d.LabelValue.Init(&d.limiter)
	d.Location.Init(&d.limiter)
	d.Mapping.Init(&d.limiter)
	d.NumValueUnit.Init(&d.limiter)
	d.SampleValueType.Init(&d.limiter)
	d.SystemName.Init(&d.limiter)

}

func (d *WriterState) ResetDicts() {
	d.limiter.ResetDict()
	d.BuildID.Reset()
	d.Comment.Reset()
	d.Filename.Reset()
	d.Function.Reset()
	d.FunctionName.Reset()
	d.LabelKey.Reset()
	d.LabelValue.Reset()
	d.Location.Reset()
	d.Mapping.Reset()
	d.NumValueUnit.Reset()
	d.SampleValueType.Reset()
	d.SystemName.Reset()
}
